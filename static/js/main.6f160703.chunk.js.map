{"version":3,"sources":["Components/Clock/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","this","timer","setInterval","setState","console","log","toLocaleTimeString","clearInterval","prevProps","name","props","React","Component","App","isClockVisible","clockName","Math","round","random","showClock","hideClock","randomName","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,kEAKuB,IAAD,OAClBC,KAAKC,MAAQC,aAAY,WACvB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE5BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBACzB,OAVP,6CAcIC,cAAcP,KAAKC,SAdvB,yCAiBqBO,GACdA,EAAUC,OAAST,KAAKU,MAAMD,MAC/BL,QAAQC,IAAR,qCAA0CG,EAAUC,KAApD,eAA+DT,KAAKU,MAAMD,SAnBhF,+BAuBY,IACAX,EAASE,KAAKH,MAAdC,KACSE,KAAKU,MAAdD,KAER,OACE,6BACE,2CAEG,IACD,8BAAOX,EAAKQ,4BAhCtB,GAA2BK,IAAMC,WC6ClBC,G,kNA3CbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,W,EAG7BC,UAAY,WACV,EAAKhB,SAAS,CAAEW,gBAAgB,K,EAGlCM,UAAY,WACV,EAAKjB,SAAS,CAAEW,gBAAgB,K,EAGlCO,WAAa,WACX,EAAKlB,SAAS,CAAEY,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,a,uDAGnC,IACAJ,EAAmBd,KAAKH,MAAxBiB,eAER,OACE,yBAAKQ,UAAU,OACb,2CACCR,GACE,kBAAC,EAAD,CAAOL,KAAMT,KAAKH,MAAMkB,YAG3B,4BAAQQ,KAAK,SAASC,QAASxB,KAAKmB,WAApC,QAIA,4BAAQI,KAAK,SAASC,QAASxB,KAAKoB,WAApC,QAIA,4BAAQG,KAAK,SAASC,QAASxB,KAAKqB,YAApC,e,GApCUV,IAAMC,YCAxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6f160703.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({ date: new Date() });\n\n    console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.name !== this.props.name) {\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div>\n        <p>\n          Current time:\n          {' '}\n          <span>{date.toLocaleTimeString()}</span>\n        </p>\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n}\n\nexport default Clock;\n","import React from 'react';\nimport { Clock } from './Components/Clock/Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.round(Math.random() * 100),\n  }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  randomName = () => {\n    this.setState({ clockName: Math.round(Math.random() * 100) });\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible\n        && <Clock name={this.state.clockName} />\n        }\n\n        <button type=\"button\" onClick={this.showClock}>\n          Show\n        </button>\n\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide\n        </button>\n\n        <button type=\"button\" onClick={this.randomName}>\n          Random\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}